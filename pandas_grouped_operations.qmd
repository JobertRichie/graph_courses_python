# Imports

```{python}
import pandas as pd 
import vega_datasets as vd
import plotly.express as px
import warnings
import calendar

pd.options.display.max_rows = 20

pd.options.mode.copy_on_write = True #Sient warnings

warnings.filterwarnings("ignore") #Silent all warnings
```
## Data

```{python}
weather_raw = vd.data.seattle_weather()
weather_raw
```

```{python}
weather = weather_raw.query("date.dt.year == 2012")
weather["month"] = pd.Categorical(
    weather["date"].dt.strftime("%B"),
    categories = list(calendar.month_name[1:]),
    ordered = True
)
weather
```
## Ading summary statistics with transform

```{python}
(
    weather.groupby("month")
    .agg(mean_precip = ("precipitation", "mean"))
    .reset_index
)
```

```{python}
#Using transform to add the summary stat to the dataframe
weather["mean_precip_month"] = weather.groupby("month")["precipitation"].transform("mean")
weather
```

```{python}
weather["median_precip_month"] = weather.groupby("month")["precipitation"].transform("median")
weather
```

```{python}
weather["sum_precip_month"] = weather.groupby("month")["precipitation"].transform("sum")
weather
```

```{python}
weather["precip_month_percent"] = 100*weather["precipitation"]/weather["sum_precip_month"]
weather
```

```{python}
#Practice question
## Using the tips dataset, calculate: 1. A new column daily_total_tips containing the total tips for each day 2. A new column tip_proportion showing what proportion of that dayâ€™s total tips came from each customer
```

```{python}
tips = px.data.tips()
tips["daily_total_tips"] = tips.groupby("day")["tip"].transform("sum")
tips["tip_percent"] = 100 * tips["tip"] / tips["daily_total_tips"]
tips
```
 # Counting values within grouos using the value_counts() method
```{python}
weather_subset = weather[["date", "month", "precipitation", "wind", "weather"]]
```

```{python}
weather_subset["weather"].value_counts(normalize = True)
```
# Grouped version

```{python}
weather.groupby("month")["weather"].value_counts().reset_index()
```

```{python}
weather.groupby("month")["weather"].value_counts(normalize = True).reset_index()
```

```{python}
# Practice question
## Using the tips dataset, count the number of smokers and non-smokers for each day.
```

```{python}
tips.groupby("day")["smoker"].value_counts()
```

# Cumulative sums

```{python}
#cumulative rain per month in the weather dataset
weather_subset["precipitation"].cumsum()
#By month 
weather_subset.groupby("month")["precipitation"].cumsum()
#Creating a new variable called "precip_cumul"
weather_subset["precip_cumul"] = weather_subset.groupby("month")["precipitation"].cumsum()
weather_subset
```

```{python}
# Practice question
## Using the tips dataset, compute the cumulative sum of total_bill for each day , adding a new column cumul_total_bill_day . Then add another column cumul_tip_day that contains the cumulative sum of tip for each day.
```

```{python}
tips["cumul_total_bill_day"] = tips.groupby("day")["daily_total_tips"].cumsum()
tips["cumul_tip_day"] = tips.groupby("day")["tip"].cumsum()
tips
```

